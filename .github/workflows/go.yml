name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Bump version and create release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ env.VERSION }}
          title: Release ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          prerelease: false

      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: ${{ env.VERSION }}

      - name: Update release number
        uses: actions/github-script@v4
        with:
          script: |
            const newVersion = '${{ env.VERSION }}'
            const currentVersion = context.payload.release.tag_name
            const regex = /\d+\.\d+\.\K(\d+)/
            const newReleaseNumber = currentVersion.match(regex) ? currentVersion.replace(regex, m => parseInt(m) + 1) : newVersion
            github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              tag_name: context.payload.release.tag_name,
              name: context.payload.release.name,
              body: context.payload.release.body,
              prerelease: context.payload.release.prerelease,
              draft: false,
              target_commitish: context.payload.release.target_commitish,
            })
        env:
          VERSION: ${{ env.VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
