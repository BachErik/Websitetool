name: Go Release Binaries

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    # Set up Go environment
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    # Check out the code
    - name: Check out code
      uses: actions/checkout@v2

    # Build and upload the binaries
    - name: Build and upload binaries
      id: build
      run: |
        for os in windows linux darwin; do
          env GOOS=$os GOARCH=amd64 go build -o myapp-$os-amd64 main.go
          echo "::set-output name=myapp-$os-amd64::myapp-$os-amd64"
        done
      shell: bash

    # Create a tag for the release
    - name: Create tag
      id: create_tag
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        body: This is a automated release for the latest changes.

    # Upload the binaries as release assets
    - name: Upload release assets
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_tag.outputs.upload_url }}
        asset_path: |
          ${{ steps.build.outputs.myapp-windows-amd64 }}
          ${{ steps.build.outputs.myapp-linux-amd64 }}
          ${{ steps.build.outputs.myapp-darwin-amd64 }}
        asset_name: |
          myapp-windows-amd64.exe
          myapp-linux-amd64
          myapp-darwin-amd64
        asset_content_type: application/octet-stream
